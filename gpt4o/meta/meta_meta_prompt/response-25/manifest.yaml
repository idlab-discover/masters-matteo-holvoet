apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wordpress
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - wordpress
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: WORDPRESS_DB_HOST
          value: my-wordpress-mysql
        - name: WORDPRESS_DB_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: mysql-secret
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-secret
        image: wordpress:latest
        name: wordpress
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: '1'
            memory: 512Mi
          requests:
            cpu: 500m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/www/html/wp-content/cache
          name: wordpress-cache
      nodeSelector:
        app: wordpress
      volumes:
      - emptyDir: {}
        name: wordpress-cache
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-service
spec:
  ports:
  - port: 80
  selector:
    app: wordpress
  type: LoadBalancer
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-wordpress-mysql
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wordpress-mysql
  serviceName: mysql-service
  template:
    metadata:
      labels:
        app: wordpress-mysql
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - wordpress-mysql
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: rootpassword
              name: mysql-secret
        - name: MYSQL_DATABASE
          value: wordpress
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: mysql-secret
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-secret
        image: mysql:5.7
        name: mysql
        ports:
        - containerPort: 3306
        resources:
          limits:
            cpu: '1'
            memory: 1024Mi
          requests:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
      nodeSelector:
        app: mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  clusterIP: None
  ports:
  - port: 3306
  selector:
    app: wordpress-mysql
---
apiVersion: v1
data:
  password: bXlzcWwyMDIw
  rootpassword: cm9vdHBhc3N3b3Jk
  username: d29yZHByZXNz
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: wordpress-network-policy
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: wordpress-mysql
  podSelector:
    matchLabels:
      app: wordpress
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mysql-network-policy
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: wordpress
  podSelector:
    matchLabels:
      app: wordpress-mysql
  policyTypes:
  - Ingress
