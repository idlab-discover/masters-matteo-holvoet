```yaml
# Namespace definition
apiVersion: v1
kind: Namespace
metadata:
  name: wp-mission-critical

---

# MySQL Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: wp-mission-critical
spec:
  replicas: 3  # High availability
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.7
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        resources:
          requests:
            memory: "500Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1"
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: wp-mission-critical
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None  # Headless service for stateful connectivity

---

# Persistent Volume Claim for MySQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: wp-mission-critical
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

# WordPress Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-deployment
  namespace: wp-mission-critical
spec:
  replicas: 3  # For high availability and load balancing
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - name: wordpress
        image: wordpress:latest
        ports:
        - containerPort: 80
        env:
        - name: WORDPRESS_DB_HOST
          value: "mysql-service"
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        resources:
          requests:
            memory: "300Mi"
            cpu: "300m"
          limits:
            memory: "600Mi"
            cpu: "500m"
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wordpress-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: wordpress-service
  namespace: wp-mission-critical
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: wordpress

---

# Persistent Volume Claim for WordPress
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-pvc
  namespace: wp-mission-critical
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---

# Secret for MySQL password
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: wp-mission-critical
type: Opaque
data:
  password: <base64-encoded-password>

---

# Network Policy for WordPress and MySQL
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: wp-network-policy
  namespace: wp-mission-critical
spec:
  podSelector:
    matchLabels:
      app: wordpress
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: mysql
    ports:
    - protocol: TCP
      port: 3306

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mysql-network-policy
  namespace: wp-mission-critical
spec:
  podSelector:
    matchLabels:
      app: mysql
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: wordpress
    ports:
    - protocol: TCP
      port: 3306
```
