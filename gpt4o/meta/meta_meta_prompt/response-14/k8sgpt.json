{
  "provider": "openai",
  "errors": null,
  "status": "ProblemDetected",
  "problems": 8,
  "results": [
    {
      "kind": "Ingress",
      "name": "wordpress-mysql/wordpress-ingress",
      "error": [
        {
          "Text": "Ingress wordpress-mysql/wordpress-ingress does not specify an Ingress class.",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "wordpress-mysql",
              "Masked": "aU41anFCPEwwekFKbzox"
            },
            {
              "Unmasked": "wordpress-ingress",
              "Masked": "Uldmci95NidWTnNyKDE7YUo="
            }
          ]
        },
        {
          "Text": "Ingress uses the secret wordpress-mysql/wordpress-tls as a TLS certificate which does not exist.",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "wordpress-mysql",
              "Masked": "J3wicjktJUp3WWtyUylK"
            },
            {
              "Unmasked": "wordpress-tls",
              "Masked": "Z0NlbD8xUmh2dXUmQg=="
            }
          ]
        }
      ],
      "details": "Error: The Ingress resource is missing an Ingress class and is referencing a non-existent TLS certificate.\n\nSolution: \n1. Add an Ingress class to the Ingress resource.\n2. Create the TLS secret named 'wordpress-tls' in the 'wordpress-mysql' namespace.",
      "parentObject": ""
    },
    {
      "kind": "Service",
      "name": "wordpress-mysql/mysql",
      "error": [
        {
          "Text": "Service has not ready endpoints, pods: [Pod/mysql-7c85cddfdd-sncx7], expected 1",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The service has no ready endpoints because the expected pod is not ready.\n\nSolution: \n1. Check pod status with `kubectl get pods`.\n2. Inspect pod logs using `kubectl logs Pod/mysql-7c85cddfdd-sncx7`.\n3. Verify readiness probe configuration.\n4. Ensure pod dependencies are running.",
      "parentObject": ""
    },
    {
      "kind": "Service",
      "name": "wordpress-mysql/wordpress",
      "error": [
        {
          "Text": "Service has not ready endpoints, pods: [Pod/wordpress-8684d5d8d9-jp6m8 Pod/wordpress-8684d5d8d9-cph8p Pod/wordpress-8684d5d8d9-2d6sm], expected 3",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The service has no ready endpoints because the expected 3 pods are not all in a ready state.\n\nSolution: 1. Check pod status with `kubectl get pods`. 2. Inspect pod logs using `kubectl logs [pod-name]`. 3. Ensure pods are healthy and running. 4. Verify service and pod labels match. 5. Restart pods if necessary.",
      "parentObject": ""
    },
    {
      "kind": "Pod",
      "name": "wordpress-mysql/wordpress-8684d5d8d9-jp6m8",
      "error": [
        {
          "Text": "Readiness probe failed: HTTP probe failed with statuscode: 500",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application returned a 500 status code, indicating an internal server error.\n\nSolution: \n1. Check application logs for errors.\n2. Ensure all dependencies are running.\n3. Verify configuration settings.\n4. Restart the application.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Pod",
      "name": "wordpress-mysql/mysql-7c85cddfdd-sncx7",
      "error": [
        {
          "Text": "Readiness probe failed: \u0007mysqladmin: connect to server at 'localhost' failed\nerror: 'Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)'\nCheck that mysqld is running and that the socket: '/var/run/mysqld/mysqld.sock' exists!\n",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The Kubernetes readiness probe failed because it can't connect to the MySQL server via the specified socket.\n\nSolution: \n1. Ensure MySQL is running: `systemctl status mysql`.\n2. Verify the socket file exists: `ls /var/run/mysqld/mysqld.sock`.\n3. Restart MySQL: `systemctl restart mysql`.",
      "parentObject": "Deployment/mysql"
    },
    {
      "kind": "Pod",
      "name": "wordpress-mysql/wordpress-8684d5d8d9-2d6sm",
      "error": [
        {
          "Text": "Readiness probe failed: HTTP probe failed with statuscode: 500",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application returned a 500 status code, indicating an internal server error.\n\nSolution: \n1. Check application logs for errors.\n2. Ensure all dependencies are running.\n3. Verify configuration settings.\n4. Restart the application.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Pod",
      "name": "wordpress-mysql/wordpress-8684d5d8d9-cph8p",
      "error": [
        {
          "Text": "Readiness probe failed: HTTP probe failed with statuscode: 500",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application returned a 500 status code, indicating an internal server error.\n\nSolution: \n1. Check application logs for errors.\n2. Ensure all dependencies are running.\n3. Verify configuration settings.\n4. Restart the application.",
      "parentObject": "Deployment/wordpress"
    }
  ]
}