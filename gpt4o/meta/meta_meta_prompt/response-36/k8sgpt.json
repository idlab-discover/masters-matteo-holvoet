{
  "provider": "openai",
  "errors": null,
  "status": "ProblemDetected",
  "problems": 4,
  "results": [
    {
      "kind": "Ingress",
      "name": "wp-site/wordpress-ingress",
      "error": [
        {
          "Text": "Ingress wp-site/wordpress-ingress does not specify an Ingress class.",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "wp-site",
              "Masked": "QD9pT0cxPQ=="
            },
            {
              "Unmasked": "wordpress-ingress",
              "Masked": "dm4lZnVzWjJ4cDBzWDNYI3E="
            }
          ]
        }
      ],
      "details": "Error: The Ingress resource 'wordpress-ingress' in the 'wp-site' namespace lacks a specified Ingress class, which defines the controller to handle the Ingress.\n\nSolution: \n1. Edit the Ingress manifest.\n2. Add `ingressClassName: <your-ingress-class>` under `spec`.\n3. Apply changes with `kubectl apply -f <your-manifest>.yaml`.",
      "parentObject": ""
    },
    {
      "kind": "Pod",
      "name": "wp-site/wordpress-55758bffdb-jrrst",
      "error": [
        {
          "Text": "Readiness probe failed: HTTP probe failed with statuscode: 500",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application returned a 500 status code, indicating an internal server error.\n\nSolution: \n1. Check application logs for errors.\n2. Ensure all dependencies are running.\n3. Verify configuration settings.\n4. Restart the application.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Pod",
      "name": "wp-site/wordpress-55758bffdb-wqjpg",
      "error": [
        {
          "Text": "Readiness probe failed: HTTP probe failed with statuscode: 500",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application returned a 500 status code, indicating an internal server error.\n\nSolution: \n1. Check application logs for errors.\n2. Ensure all dependencies are running.\n3. Verify configuration settings.\n4. Restart the application.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Service",
      "name": "wp-site/wordpress",
      "error": [
        {
          "Text": "Service has not ready endpoints, pods: [Pod/wordpress-55758bffdb-jrrst Pod/wordpress-55758bffdb-wqjpg], expected 2",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The service lacks ready endpoints because the specified pods are not in a ready state.\n\nSolution: \n1. Check pod status with `kubectl get pods`.\n2. Inspect pod logs using `kubectl logs [pod-name]`.\n3. Verify pod readiness probes.\n4. Ensure required resources are available.\n5. Restart pods if necessary.",
      "parentObject": ""
    }
  ]
}