apiVersion: v1
kind: Namespace
metadata:
  name: wordpress-site
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress-site
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - env:
        - name: WORDPRESS_DB_HOST
          value: mysql
        - name: WORDPRESS_DB_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: mysql-secrets
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-secrets
        image: wordpress:5.8
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          tcpSocket:
            port: 80
          timeoutSeconds: 5
        name: wordpress
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /wp-admin/install.php
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 500m
            memory: 256Mi
      securityContext:
        runAsUser: 1000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: wordpress-site
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: root-password
              name: mysql-secrets
        - name: MYSQL_DATABASE
          value: wordpress
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: mysql-secrets
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-secrets
        image: mysql:5.7
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 10
          tcpSocket:
            port: 3306
          timeoutSeconds: 5
        name: mysql
        ports:
        - containerPort: 3306
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
      securityContext:
        runAsUser: 1000
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress-site
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: wordpress
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: wordpress-site
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mysql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: wordpress-site
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
data:
  password: cGFzc3dvcmQ=
  root-password: cm9vdC1wYXNzd29yZA==
  username: dXNlcm5hbWU=
kind: Secret
metadata:
  name: mysql-secrets
  namespace: wordpress-site
type: Opaque
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: wordpress-allow-mysql
  namespace: wordpress-site
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: mysql
    ports:
    - port: 3306
      protocol: TCP
  podSelector:
    matchLabels:
      app: wordpress
  policyTypes:
  - Ingress
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mysql-backup
  namespace: wordpress-site
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sh
            - -c
            - mysqldump -h=mysql -u $MYSQL_USER -p$MYSQL_PASSWORD wordpress > /backup/db_backup.sql
            env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: mysql-secrets
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mysql-secrets
            image: mysql:5.7
            name: mysql-backup
            volumeMounts:
            - mountPath: /backup
              name: backup-storage
          restartPolicy: OnFailure
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: mysql-backup-pv-claim
  schedule: 0 0 * * *
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-backup-pv-claim
  namespace: wordpress-site
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
data:
  log.properties: '[Output]

    LogLevel=INFO'
kind: ConfigMap
metadata:
  name: logging-config
  namespace: wordpress-site
