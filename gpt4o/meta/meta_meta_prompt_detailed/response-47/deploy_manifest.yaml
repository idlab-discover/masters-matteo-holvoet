apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - env:
        - name: WORDPRESS_DB_HOST
          valueFrom:
            secretKeyRef:
              key: database-host
              name: mysql-secret
        - name: WORDPRESS_DB_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: mysql-secret
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: mysql-secret
        image: wordpress:5.8
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          tcpSocket:
            port: 80
          timeoutSeconds: 5
        name: wordpress
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /wp-admin/install.php
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: root-password
              name: mysql-secret
        image: mysql:5.7
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 10
          tcpSocket:
            port: 3306
          timeoutSeconds: 5
        name: mysql
        ports:
        - containerPort: 3306
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: wordpress
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  clusterIP: None
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: mysql
---
apiVersion: v1
data:
  DATABASE_HOST: mysql
kind: ConfigMap
metadata:
  name: wordpress-config
---
apiVersion: v1
data:
  database-host: bXlzcWw=
  database-password: cGFzc3dvcmQ=
  database-user: cm9vdA==
  root-password: cm9vdHBhc3M=
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: wordpress-allow
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: wordpress
    ports:
    - port: 80
      protocol: TCP
  podSelector:
    matchLabels:
      app: wordpress
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mysql-allow
spec:
  egress:
  - ports:
    - port: 80
      protocol: TCP
    to:
    - podSelector:
        matchLabels:
          app: wordpress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: wordpress
    ports:
    - port: 3306
      protocol: TCP
  podSelector:
    matchLabels:
      app: mysql
  policyTypes:
  - Ingress
  - Egress
