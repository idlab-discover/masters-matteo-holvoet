```yaml
apiVersion: v1
kind: Namespace
metadata:
  name: wordpress-mysql

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: wordpress-mysql
type: Opaque
data:
  mysql-root-password: c3VwZXJzZWNyZXRwYXNz # base64 encoded "supersecretpass"
  mysql-database: d29yZHByZXNz # base64 encoded "wordpress"
  mysql-user: d29yZHB1c2Vy # base64 encoded "wpuser"
  mysql-password: c2VjdXJlcGFzcw== # base64 encoded "securepass"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-config
  namespace: wordpress-mysql
data:
  WORDPRESS_DB_HOST: mysql-wordpress
  WORDPRESS_DB_USER: wpuser
  WORDPRESS_DB_PASSWORD: securepass
  WORDPRESS_DB_NAME: wordpress

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: wordpress-mysql
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-database
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: wordpress-mysql
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress-mysql
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wordpress
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - name: wordpress
        image: wordpress:php7.4
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: wordpress-config

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-wordpress
  namespace: wordpress-mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql

---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress-mysql
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: wordpress

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wordpress-ingress
  namespace: wordpress-mysql
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
  - host: wordpress.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: wordpress
            port:
              number: 80
  tls:
  - hosts:
    - wordpress.example.com
    secretName: wordpress-tls
```
