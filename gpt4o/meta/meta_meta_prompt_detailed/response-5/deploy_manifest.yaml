apiVersion: v1
kind: Namespace
metadata:
  name: wordpress-mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: wordpress-mysql
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: rootpassword
              name: mysql-secret
        image: mysql:5.7
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 10
          tcpSocket:
            port: 3306
          timeoutSeconds: 5
        name: mysql
        ports:
        - containerPort: 3306
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 5
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
---
apiVersion: v1
data:
  rootpassword: cm9vdHBhc3N3b3Jk
kind: Secret
metadata:
  name: mysql-secret
  namespace: wordpress-mysql
type: Opaque
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: wordpress-mysql
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress-mysql
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - env:
        - name: WORDPRESS_DB_HOST
          value: mysql
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: rootpassword
              name: mysql-secret
        image: wordpress:5.8
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          tcpSocket:
            port: 80
          timeoutSeconds: 5
        name: wordpress
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /wp-admin/install.php
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
        securityContext:
          seccompProfile:
            type: RuntimeDefault
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress-mysql
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: wordpress
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: wordpress-mysql
spec:
  clusterIP: None
  ports:
  - port: 3306
  selector:
    app: mysql
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: wp-mysql-policy
  namespace: wordpress-mysql
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: mysql
    ports:
    - port: 80
      protocol: TCP
  podSelector:
    matchLabels:
      app: wordpress
  policyTypes:
  - Ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: wordpress-role
  namespace: wordpress-mysql
rules:
- apiGroups:
  - ''
  resources:
  - pods
  - pods/log
  - services
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: wordpress-role-binding
  namespace: wordpress-mysql
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: wordpress-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: wordpress-mysql
