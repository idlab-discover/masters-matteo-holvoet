```yaml
apiVersion: v1
kind: Namespace
metadata:
  name: wordpress-mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: wordpress-mysql
spec:
  serviceName: mysql
  replicas: 3
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: rootpassword
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
          securityContext:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: wordpress-mysql
type: Opaque
data:
  rootpassword: your-root-password-base64
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: wordpress-mysql
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress-mysql
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
        - name: wordpress
          image: wordpress:5.8
          ports:
            - containerPort: 80
          env:
            - name: WORDPRESS_DB_HOST
              value: mysql
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: rootpassword
          securityContext:
            seccompProfile:
              type: RuntimeDefault
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress-mysql
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: wordpress
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: wordpress-mysql
spec:
  clusterIP: None
  ports:
    - port: 3306
  selector:
    app: mysql
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: wp-mysql-policy
  namespace: wordpress-mysql
spec:
  podSelector:
    matchLabels:
      app: wordpress
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: mysql
      ports:
        - protocol: TCP
          port: 80
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: wordpress-mysql
  name: wordpress-role
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "services"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: wordpress-role-binding
  namespace: wordpress-mysql
subjects:
- kind: ServiceAccount
  name: default
  namespace: wordpress-mysql
roleRef:
  kind: Role
  name: wordpress-role
  apiGroup: rbac.authorization.k8s.io
```