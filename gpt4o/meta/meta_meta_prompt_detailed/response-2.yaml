```yaml
apiVersion: v1
kind: Namespace
metadata:
  name: wordpress-prod

---

apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: wordpress-prod
type: Opaque
data:
  mysql-root-password: <base64-root-password>
  mysql-user: <base64-user>
  mysql-password: <base64-password>

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-config
  namespace: wordpress-prod
data:
  WORDPRESS_DB_HOST: "mysql"
  WORDPRESS_DB_USER: "<mysql-user>"
  WORDPRESS_DB_PASSWORD: "<mysql-password>"
  WORDPRESS_DB_NAME: "wordpress"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress-prod
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - name: wordpress
        image: wordpress:latest
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: wordpress-config
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - wordpress
              topologyKey: "kubernetes.io/hostname"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: wordpress-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      nodeSelector:
        database: "true"
      containers:
      - name: mysql
        image: mysql:5.7
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-password
        - name: MYSQL_DATABASE
          value: "wordpress"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      tolerations:
      - key: "database"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pv-claim
  namespace: wordpress-prod
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: high-performance

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: wordpress-prod
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: high-performance

---

apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress-prod
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: wordpress

---

apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: wordpress-prod
spec:
  ports:
  - port: 3306
    targetPort: 3306
    protocol: TCP
  selector:
    app: mysql
  clusterIP: None

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: wp-mysql-policy
  namespace: wordpress-prod
spec:
  podSelector:
    matchLabels:
      app: wordpress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: mysql
      ports:
        - protocol: TCP
          port: 3306

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: access-policy
  namespace: wordpress-prod
spec:
  podSelector: {}
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: wordpress-prod
  egress:
    - {}
```