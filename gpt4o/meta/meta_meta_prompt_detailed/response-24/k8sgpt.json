{
  "provider": "openai",
  "errors": null,
  "status": "ProblemDetected",
  "problems": 8,
  "results": [
    {
      "kind": "Ingress",
      "name": "default/wordpress-ingress",
      "error": [
        {
          "Text": "Ingress default/wordpress-ingress does not specify an Ingress class.",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "default",
              "Masked": "UUlCdUI1Mg=="
            },
            {
              "Unmasked": "wordpress-ingress",
              "Masked": "ayF3Umo7Kjo2WmskJSNCWGw="
            }
          ]
        }
      ],
      "details": "Error: The Ingress resource 'wordpress-ingress' in the 'default' namespace lacks a specified Ingress class, which is needed to determine the controller handling it.\n\nSolution: \n1. Edit the Ingress manifest.\n2. Add `ingressClassName: <your-ingress-class>` under `spec`.\n3. Apply changes with `kubectl apply -f <file-name>.yaml`.",
      "parentObject": ""
    },
    {
      "kind": "Pod",
      "name": "default/wordpress-6bd4bc4f4-w6phj",
      "error": [
        {
          "Text": "0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: No nodes are available due to taints; 1 node is a control plane, and 2 nodes are not ready. Preemption isn't helping.\n\nSolution: \n1. Check node taints with `kubectl describe node`.\n2. Remove taints with `kubectl taint nodes <node-name> <taint-key>-`.\n3. Ensure nodes are ready with `kubectl get nodes`.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Pod",
      "name": "default/wordpress-6bd4bc4f4-6rvng",
      "error": [
        {
          "Text": "0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: No nodes are available due to taints; 1 node is a control plane, and 2 nodes are not ready. Preemption isn't helping.\n\nSolution: \n1. Check node taints with `kubectl describe node`.\n2. Remove taints with `kubectl taint nodes <node-name> <taint-key>-`.\n3. Ensure nodes are ready with `kubectl get nodes`.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Pod",
      "name": "default/wordpress-6bd4bc4f4-t7phr",
      "error": [
        {
          "Text": "0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: No nodes are available due to taints; 1 node is a control plane, and 2 nodes are not ready. Preemption isn't helping.\n\nSolution: \n1. Check node taints with `kubectl describe node`.\n2. Remove taints with `kubectl taint nodes <node-name> <taint-key>-`.\n3. Ensure nodes are ready with `kubectl get nodes`.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Service",
      "name": "default/wordpress",
      "error": [
        {
          "Text": "Service has no endpoints, expected label app=wordpress",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "app",
              "Masked": "fSdx"
            },
            {
              "Unmasked": "wordpress",
              "Masked": "YVY0KUVfRjc+"
            }
          ]
        },
        {
          "Text": "Service default/wordpress has event failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)",
          "KubernetesDoc": "",
          "Sensitive": null
        },
        {
          "Text": "Service default/wordpress has event invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)",
          "KubernetesDoc": "",
          "Sensitive": null
        }
      ],
      "details": "Error: The service has no endpoints and cannot fetch CPU metrics because the metrics server is unavailable.\n\nSolution: \n1. Ensure the metrics server is deployed.\n2. Verify the metrics server is running: `kubectl get pods -n kube-system`.\n3. Check network policies/firewalls allowing access.\n4. Restart the metrics server if needed.",
      "parentObject": ""
    },
    {
      "kind": "Service",
      "name": "default/wordpress-ingress",
      "error": [
        {
          "Text": "Service has no endpoints, expected label app=wordpress",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "app",
              "Masked": "MmNa"
            },
            {
              "Unmasked": "wordpress",
              "Masked": "VW4wMEBBdHE4"
            }
          ]
        }
      ],
      "details": "Error: The service can't find any pods because there are no endpoints with the label app=wordpress.\n\nSolution: \n1. Check if pods have the label app=wordpress.\n2. If not, add the label to the pods.\n3. Ensure the selector in the service matches the pod labels.\n4. Redeploy the service if needed.",
      "parentObject": ""
    }
  ]
}