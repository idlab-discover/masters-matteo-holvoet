apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: wordpress
  name: wordpress
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - env:
        - name: WORDPRESS_DB_HOST
          value: mysql-headless.default.svc.cluster.local
        - name: WORDPRESS_DB_USER
          valueFrom:
            secretKeyRef:
              key: db-user
              name: wordpress-secrets
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db-password
              name: wordpress-secrets
        image: wordpress:latest
        name: wordpress
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
      nodeSelector:
        disktype: ssd
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: wordpress
spec:
  maxReplicas: 10
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: wordpress
  targetCPUUtilizationPercentage: 50
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mysql
  name: mysql
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql-headless
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: root-password
              name: mysql-secrets
        - name: MYSQL_DATABASE
          value: wordpress
        image: mysql:5.7
        name: mysql
        ports:
        - containerPort: 3306
        resources:
          limits:
            cpu: '1'
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
      storageClassName: standard
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: wordpress
  name: wordpress
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: wordpress
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-ingress
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: wordpress
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mysql
  name: mysql-headless
spec:
  clusterIP: None
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mysql
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wordpress-ingress
spec:
  rules:
  - host: wordpress.example.com
    http:
      paths:
      - backend:
          service:
            name: wordpress
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
---
apiVersion: v1
data:
  custom.ini: 'upload_max_filesize = 50M

    post_max_size = 50M

    '
kind: ConfigMap
metadata:
  name: wordpress-config
---
apiVersion: v1
data:
  db-password: c2VjdXJlUGFzc3dvcmQ=
  db-user: dGVzdFVzZXI=
kind: Secret
metadata:
  name: wordpress-secrets
type: Opaque
---
apiVersion: v1
data:
  root-password: c2VjdXJlUGFzc3dvcmQ=
kind: Secret
metadata:
  name: mysql-secrets
type: Opaque
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: wordpress-mysql-policy
spec:
  egress:
  - ports:
    - port: 3306
      protocol: TCP
    to:
    - podSelector:
        matchLabels:
          app: mysql
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: mysql
    ports:
    - port: 3306
      protocol: TCP
  podSelector:
    matchLabels:
      app: wordpress
  policyTypes:
  - Ingress
  - Egress
