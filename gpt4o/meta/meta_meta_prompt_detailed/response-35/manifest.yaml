apiVersion: v1
kind: Namespace
metadata:
  name: wordpress-app
---
apiVersion: v1
data:
  mysql-database: d29yZHByZXNz
  mysql-password: cGFzc3dvcmQ=
  mysql-root-password: cm9vdF9wYXNzd29yZA==
  mysql-user: dXNlcg==
kind: Secret
metadata:
  name: mysql-secret
  namespace: wordpress-app
type: Opaque
---
apiVersion: v1
data:
  wp-config.php: '<?php

    define(''DB_NAME'', getenv(''MYSQL_DATABASE''));

    define(''DB_USER'', getenv(''MYSQL_USER''));

    define(''DB_PASSWORD'', getenv(''MYSQL_PASSWORD''));

    define(''DB_HOST'', ''mysql'');

    define(''DB_CHARSET'', ''utf8'');

    define(''DB_COLLATE'', '''');

    '
kind: ConfigMap
metadata:
  name: wordpress-config
  namespace: wordpress-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: wordpress-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: mysql-secret
        image: mysql:5.7
        name: mysql
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: wordpress-app
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: mysql-secret
        image: wordpress:php7.4-fpm
        name: wordpress
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - mountPath: /var/www/html/wp-config.php
          name: wordpress-config
          subPath: wp-config.php
      volumes:
      - configMap:
          name: wordpress-config
        name: wordpress-config
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress-app
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: wordpress
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: wordpress-app
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mysql
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-wordpress
  namespace: wordpress-app
spec:
  egress:
  - ports:
    - port: 3306
      protocol: TCP
    to:
    - podSelector:
        matchLabels:
          app: mysql
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: wordpress
  podSelector:
    matchLabels:
      app: wordpress
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/rewrite-target: /
  name: wordpress-ingress
  namespace: wordpress-app
spec:
  rules:
  - host: wordpress.example.com
    http:
      paths:
      - backend:
          service:
            name: wordpress
            port:
              number: 80
        path: /
        pathType: Prefix
