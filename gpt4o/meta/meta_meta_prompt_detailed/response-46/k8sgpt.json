{
  "provider": "openai",
  "errors": null,
  "status": "ProblemDetected",
  "problems": 8,
  "results": [
    {
      "kind": "Service",
      "name": "wordpress/mysql",
      "error": [
        {
          "Text": "Service has not ready endpoints, pods: [Pod/mysql-fd8c9d48f-m8n5b], expected 1",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The service has no ready endpoints because the expected pod is not running or ready.\n\nSolution: \n1. Check pod status with `kubectl get pods`.\n2. Describe pod for issues using `kubectl describe pod mysql-fd8c9d48f-m8n5b`.\n3. Inspect logs with `kubectl logs mysql-fd8c9d48f-m8n5b`.\n4. Resolve any errors found.",
      "parentObject": ""
    },
    {
      "kind": "Service",
      "name": "wordpress/wordpress",
      "error": [
        {
          "Text": "Service has not ready endpoints, pods: [Pod/wordpress-77457cf656-j9nh8 Pod/wordpress-77457cf656-xw872 Pod/wordpress-77457cf656-2grcg], expected 3",
          "KubernetesDoc": "",
          "Sensitive": []
        },
        {
          "Text": "Service wordpress/wordpress has event failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)",
          "KubernetesDoc": "",
          "Sensitive": null
        },
        {
          "Text": "Service wordpress/wordpress has event invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)",
          "KubernetesDoc": "",
          "Sensitive": null
        }
      ],
      "details": "Error: The Kubernetes service can't find CPU metrics for the specified pods, causing readiness issues.\n\nSolution: \n1. Ensure Metrics Server is installed.\n2. Verify API access with `kubectl get apiservices`.\n3. Check network policies/firewalls.\n4. Restart Metrics Server: `kubectl delete pod -n kube-system -l k8s-app=metrics-server`.",
      "parentObject": ""
    },
    {
      "kind": "Pod",
      "name": "wordpress/mysql-fd8c9d48f-m8n5b",
      "error": [
        {
          "Text": "the last termination reason is Error container=mysql pod=mysql-fd8c9d48f-m8n5b",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The MySQL container in the pod `mysql-fd8c9d48f-m8n5b` terminated with an error.\n\nSolution: \n1. Check pod logs: `kubectl logs mysql-fd8c9d48f-m8n5b`.\n2. Inspect events: `kubectl describe pod mysql-fd8c9d48f-m8n5b`.\n3. Verify MySQL config and resources.\n4. Restart pod: `kubectl delete pod mysql-fd8c9d48f-m8n5b`.",
      "parentObject": "Deployment/mysql"
    },
    {
      "kind": "Pod",
      "name": "wordpress/wordpress-77457cf656-2grcg",
      "error": [
        {
          "Text": "Readiness probe failed: Get \"http://10.244.2.4:80/wp-admin/install.php\": dial tcp 10.244.2.4:80: connect: connection refused",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application couldn't connect to the specified IP and port; the connection was refused.\n\nSolution: \n1. Verify the application is running on the correct IP/port.\n2. Check network policies/firewall settings.\n3. Ensure the service is correctly configured.\n4. Review pod logs for errors.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Pod",
      "name": "wordpress/wordpress-77457cf656-j9nh8",
      "error": [
        {
          "Text": "Liveness probe failed: dial tcp 10.244.2.2:80: connect: connection refused",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The liveness probe failed because the application at IP 10.244.2.2 on port 80 is not accepting connections.\n\nSolution: \n1. Verify the application is running.\n2. Check if the service is listening on port 80.\n3. Ensure network policies allow traffic.\n4. Review pod logs for errors.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Pod",
      "name": "wordpress/wordpress-77457cf656-xw872",
      "error": [
        {
          "Text": "Liveness probe failed: dial tcp 10.244.2.3:80: connect: connection refused",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The liveness probe failed because the application at IP 10.244.2.3 on port 80 is not accepting connections.\n\nSolution: \n1. Verify the application is running on the correct port.\n2. Check network policies/firewalls.\n3. Ensure the service is correctly configured.\n4. Review pod logs for errors.",
      "parentObject": "Deployment/wordpress"
    }
  ]
}