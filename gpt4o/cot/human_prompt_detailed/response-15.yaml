Certainly! Below is the consolidated YAML manifest for deploying a WordPress site with a MySQL database backend on Kubernetes. This single YAML document encompasses all the resources discussed:

```yaml
apiVersion: v1
kind: Namespace
metadata:
  name: wordpress-namespace

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: wordpress-namespace
type: Opaque
data:
  mysql-root-password: bXlzcWxfcGFzc3dvcmQ=  # Base64 encoded value for "mysql_password"
  mysql-database: d29yZHByZXNz               # Base64 for "wordpress"
  mysql-user: d3B1c2Vy                       # Base64 for "wpuser"
  mysql-password: d3Bwd2Q=                   # Base64 for "wppwd"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-config
  namespace: wordpress-namespace
data:
  WORDPRESS_DB_NAME: "wordpress"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: wordpress-namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: wordpress-namespace
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-database
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress-namespace
spec:
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
        - name: wordpress
          image: wordpress:latest
          ports:
            - containerPort: 80
          env:
            - name: WORDPRESS_DB_HOST
              value: mysql
            - name: WORDPRESS_DB_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
            - name: WORDPRESS_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: wordpress-config
                  key: WORDPRESS_DB_NAME

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: wordpress-namespace
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
  clusterIP: None  # Creating a headless service

---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress-namespace
spec:
  type: LoadBalancer
  ports:
    - port: 80
  selector:
    app: wordpress
```

This combined YAML document should be saved to a file, e.g., `wordpress-mysql.yaml`, and applied using `kubectl apply -f wordpress-mysql.yaml` in your Kubernetes environment.