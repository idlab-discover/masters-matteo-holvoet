```yaml
apiVersion: v1
kind: Namespace
metadata:
  name: wordpress-app
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: wordpress-app
type: Opaque
data:
  mysql-root-password: dGVzdHBhc3N3b3Jk # base64 encoded "testpassword"
  mysql-database: d29yZHByZXNz # base64 encoded "wordpress"
  mysql-user: dXNlcm5hbWU= # base64 encoded "username"
  mysql-password: cGFzc3dvcmQ= # base64 encoded "password"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-config
  namespace: wordpress-app
data:
  WORDPRESS_DB_HOST: mysql
  WORDPRESS_DB_USER: username
  WORDPRESS_DB_PASSWORD: password
  WORDPRESS_DB_NAME: wordpress
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: wordpress-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: wordpress-app
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.7
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-database
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: wordpress-app
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress-app
spec:
  selector:
    matchLabels:
      app: wordpress
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - image: wordpress:5.7
        name: wordpress
        env:
          - name: WORDPRESS_DB_HOST
            valueFrom:
              configMapKeyRef:
                name: wordpress-config
                key: WORDPRESS_DB_HOST
          - name: WORDPRESS_DB_USER
            valueFrom:
              configMapKeyRef:
                name: wordpress-config
                key: WORDPRESS_DB_USER
          - name: WORDPRESS_DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: wordpress-config
                key: WORDPRESS_DB_PASSWORD
          - name: WORDPRESS_DB_NAME
            valueFrom:
              configMapKeyRef:
                name: wordpress-config
                key: WORDPRESS_DB_NAME
        ports:
          - containerPort: 80
            name: wordpress
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress-app
spec:
  ports:
    - port: 80
  selector:
    app: wordpress
  type: LoadBalancer
```

This YAML manifest includes the required configurations: a secret for sensitive data, a config map for other configuration, persistent storage for MySQL, and services for connectivity. The namespace ensures resources are nicely organized within the cluster. The LoadBalancer service for WordPress exposes it outside the cluster, enabling access to the WordPress website.