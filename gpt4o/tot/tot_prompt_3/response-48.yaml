```yaml
apiVersion: v1
kind: Namespace
metadata:
  name: wordpress-namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - name: wordpress
        image: wordpress:latest
        ports:
        - containerPort: 80
        env:
        - name: WORDPRESS_DB_HOST
          value: mysql:3306
        - name: WORDPRESS_DB_USER
          value: wordpress_user
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: wordpress-password
        - name: WORDPRESS_DB_NAME
          value: wordpress_db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: wordpress-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.7
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_DATABASE
          value: wordpress_db
        - name: MYSQL_USER
          value: wordpress_user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: wordpress-password
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: root-password
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress-namespace
spec:
  selector:
    app: wordpress
  ports:
  - port: 80
    targetPort: 80
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: wordpress-namespace
spec:
  selector:
    app: mysql
  ports:
  - port: 3306
    targetPort: 3306
  clusterIP: None
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
  namespace: wordpress-namespace
type: Opaque
data:
  wordpress-password: [base64encoded-value]
  root-password: [base64encoded-value]
```

Explanation:

1. **Namespace**: A new namespace `wordpress-namespace` is created to isolate the WordPress and MySQL application components.
   
2. **WordPress Deployment**: A Deployment for WordPress is created, with environment variables pointing to the MySQL service. The WordPress container listens on port 80.

3. **MySQL Deployment**: A Deployment for MySQL is created, with necessary environment variables for database name, user, and passwords. Secrets are used to manage passwords securely.

4. **Services**: 
   - A LoadBalancer Service for WordPress exposes it externally.
   - A headless service (`clusterIP: None`) for MySQL to allow applications within the cluster to discover it.
  
5. **Secrets**: Sensitive information like passwords is stored securely in Kubernetes Secrets. The passwords would be Base64 encoded before being stored.