Here's the complete Kubernetes YAML configuration for deploying a WordPress site with a MySQL database backend. All components, including PVCs, deployments, and services for both WordPress and MySQL, are described in this single file. 

```yaml
apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: mysql-pv-claim
    labels:
      app: wordpress
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi
        
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: mysql
    labels:
      app: wordpress
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: wordpress
        tier: mysql
    template:
      metadata:
        labels:
          app: wordpress
          tier: mysql
      spec:
        containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            - name: MYSQL_DATABASE
              value: wordpress
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
        volumes:
          - name: mysql-persistent-storage
            persistentVolumeClaim:
              claimName: mysql-pv-claim

- apiVersion: v1
  kind: Service
  metadata:
    name: mysql
    labels:
      app: wordpress
  spec:
    ports:
      - port: 3306
    selector:
      app: wordpress
      tier: mysql
    clusterIP: None

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: wordpress-pv-claim
    labels:
      app: wordpress
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: wordpress
    labels:
      app: wordpress
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: wordpress
        tier: wordpress
    template:
      metadata:
        labels:
          app: wordpress
          tier: wordpress
      spec:
        containers:
        - name: wordpress
          image: wordpress:latest
          env:
          - name: WORDPRESS_DB_HOST
            value: mysql
          - name: WORDPRESS_DB_NAME
            value: wordpress
          - name: WORDPRESS_DB_USER
            value: root
          - name: WORDPRESS_DB_PASSWORD
            value: password
          ports:
          - containerPort: 80
            name: wordpress
          volumeMounts:
          - name: wordpress-persistent-storage
            mountPath: /var/www/html
        volumes:
          - name: wordpress-persistent-storage
            persistentVolumeClaim:
              claimName: wordpress-pv-claim

- apiVersion: v1
  kind: Service
  metadata:
    name: wordpress
    labels:
      app: wordpress
  spec:
    ports:
      - port: 80
    selector:
      app: wordpress
      tier: wordpress
    type: LoadBalancer
```

This file combines all necessary components into one YAML file. You can apply this configuration with `kubectl apply -f this-file.yaml`. Adjust the resource requests/storage sizes and the MYSQL_ROOT_PASSWORD as per your security and infrastructure needs. Make sure your Kubernetes cluster supports the LoadBalancer service type, or adjust that if you're working in a different environment, such as minikube.