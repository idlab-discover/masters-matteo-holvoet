{
  "provider": "openai",
  "errors": null,
  "status": "ProblemDetected",
  "problems": 4,
  "results": [
    {
      "kind": "Ingress",
      "name": "default/wordpress-ingress",
      "error": [
        {
          "Text": "Ingress default/wordpress-ingress does not specify an Ingress class.",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "default",
              "Masked": "IXAqYS4qdQ=="
            },
            {
              "Unmasked": "wordpress-ingress",
              "Masked": "TjhQN0ZRfUhicCZPSUI2ezA="
            }
          ]
        }
      ],
      "details": "Error: The Ingress resource 'wordpress-ingress' in the 'default' namespace lacks a specified Ingress class, which is needed to determine the controller handling it.\n\nSolution: \n1. Edit the Ingress manifest.\n2. Add `ingressClassName: <your-ingress-class>` under `spec`.\n3. Apply changes with `kubectl apply -f <file-name>.yaml`.",
      "parentObject": ""
    },
    {
      "kind": "Pod",
      "name": "default/wordpress-5445bc4985-dg4p7",
      "error": [
        {
          "Text": "Readiness probe failed: HTTP probe failed with statuscode: 500",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application returned a 500 status code, indicating an internal server error.\n\nSolution: \n1. Check application logs for errors.\n2. Ensure all dependencies are running.\n3. Verify configuration settings.\n4. Restart the application.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Pod",
      "name": "default/wordpress-5445bc4985-x5rnp",
      "error": [
        {
          "Text": "Readiness probe failed: HTTP probe failed with statuscode: 500",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application returned a 500 status code, indicating an internal server error.\n\nSolution: \n1. Check application logs for errors.\n2. Ensure all dependencies are running.\n3. Verify configuration settings.\n4. Restart the application.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Service",
      "name": "default/wordpress",
      "error": [
        {
          "Text": "Service has not ready endpoints, pods: [Pod/wordpress-5445bc4985-x5rnp Pod/wordpress-5445bc4985-dg4p7], expected 2",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The service has no ready endpoints because the expected pods are not ready.\n\nSolution: \n1. Check pod status with `kubectl get pods`.\n2. Inspect pod logs using `kubectl logs [pod-name]`.\n3. Ensure containers are running and healthy.\n4. Verify service and pod configurations.\n5. Restart pods if necessary.",
      "parentObject": ""
    }
  ]
}