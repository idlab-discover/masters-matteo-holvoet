{
  "provider": "openai",
  "errors": null,
  "status": "ProblemDetected",
  "problems": 9,
  "results": [
    {
      "kind": "PersistentVolumeClaim",
      "name": "wordpress-namespace/mysql-pvc",
      "error": [
        {
          "Text": "storageclass.storage.k8s.io \"manual\" not found",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The specified StorageClass \"manual\" does not exist in the Kubernetes cluster.\n\nSolution: \n1. Verify the StorageClass name.\n2. List available StorageClasses using `kubectl get storageclass`.\n3. Create the \"manual\" StorageClass if needed, or update your configuration to use an existing one.",
      "parentObject": ""
    },
    {
      "kind": "PersistentVolumeClaim",
      "name": "wordpress-namespace/mysql-storage-mysql-1",
      "error": [
        {
          "Text": "storageclass.storage.k8s.io \"manual\" not found",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The specified StorageClass \"manual\" does not exist in the Kubernetes cluster.\n\nSolution: \n1. Verify the StorageClass name.\n2. List available StorageClasses using `kubectl get storageclass`.\n3. Create the \"manual\" StorageClass if needed, or update your configuration to use an existing one.",
      "parentObject": ""
    },
    {
      "kind": "Service",
      "name": "wordpress-namespace/wordpress",
      "error": [
        {
          "Text": "Service has not ready endpoints, pods: [Pod/wordpress-7c77d86f8d-52cvg Pod/wordpress-7c77d86f8d-7nbcl Pod/wordpress-7c77d86f8d-sd87w], expected 3",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The service has no ready endpoints because the expected 3 pods are not ready.\n\nSolution: \n1. Check pod status with `kubectl get pods`.\n2. Inspect pod logs using `kubectl logs [pod-name]`.\n3. Verify pod readiness probes.\n4. Ensure resources are sufficient.\n5. Restart pods if needed.",
      "parentObject": ""
    },
    {
      "kind": "StatefulSet",
      "name": "wordpress-namespace/mysql",
      "error": [
        {
          "Text": "StatefulSet uses the storage class manual which does not exist.",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "manual",
              "Masked": "XiNNZDpF"
            }
          ]
        },
        {
          "Text": "Statefulset pod mysql-1 in the namespace wordpress-namespace is not in running state.",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "wordpress-namespace",
              "Masked": "NE4wX15HPQ=="
            },
            {
              "Unmasked": "mysql",
              "Masked": "aCNGNiYqMkpqU2Y7TU8uLWJyLA=="
            }
          ]
        }
      ],
      "details": "Error: The StatefulSet references a non-existent storage class 'manual', causing the pod 'mysql-1' in 'wordpress-namespace' to not run.\n\nSolution: 1. Create the 'manual' storage class or update the StatefulSet to use an existing storage class. 2. Restart the StatefulSet to apply changes.",
      "parentObject": ""
    },
    {
      "kind": "Pod",
      "name": "wordpress-namespace/mysql-1",
      "error": [
        {
          "Text": "0/3 nodes are available: pod has unbound immediate PersistentVolumeClaims. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The pod can't be scheduled because it has unbound PersistentVolumeClaims and preemption isn't helping.\n\nSolution: \n1. Check if PersistentVolume exists and matches the claim.\n2. Ensure storage class is correct.\n3. Verify node affinity and taints.\n4. Retry scheduling the pod.",
      "parentObject": "StatefulSet/mysql"
    },
    {
      "kind": "Pod",
      "name": "wordpress-namespace/wordpress-7c77d86f8d-52cvg",
      "error": [
        {
          "Text": "Readiness probe failed: HTTP probe failed with statuscode: 500",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application returned a 500 status code, indicating an internal server error.\n\nSolution: \n1. Check application logs for errors.\n2. Ensure all dependencies are running.\n3. Verify configuration settings.\n4. Restart the application.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Pod",
      "name": "wordpress-namespace/wordpress-7c77d86f8d-7nbcl",
      "error": [
        {
          "Text": "Readiness probe failed: HTTP probe failed with statuscode: 500",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application returned a 500 status code, indicating an internal server error.\n\nSolution: \n1. Check application logs for errors.\n2. Ensure all dependencies are running.\n3. Verify configuration settings.\n4. Restart the application.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Pod",
      "name": "wordpress-namespace/wordpress-7c77d86f8d-sd87w",
      "error": [
        {
          "Text": "Readiness probe failed: HTTP probe failed with statuscode: 500",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application returned a 500 status code, indicating an internal server error.\n\nSolution: \n1. Check application logs for errors.\n2. Ensure all dependencies are running.\n3. Verify configuration settings.\n4. Restart the application.",
      "parentObject": "Deployment/wordpress"
    }
  ]
}