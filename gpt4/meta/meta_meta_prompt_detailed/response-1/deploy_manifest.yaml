apiVersion: v1
kind: Namespace
metadata:
  name: wordpress-setup
---
apiVersion: v1
data:
  password: cGFzc3dvcmQ=
kind: Secret
metadata:
  name: mysql-pass
  namespace: wordpress-setup
type: Opaque
---
apiVersion: v1
data:
  my.cnf: '[mysqld]

    sql_mode=NO_ENGINE_SUBSTITUTION

    '
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: wordpress-setup
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: wordpress-setup
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: wordpress-setup
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-pass
        image: mysql:5.7
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 10
          tcpSocket:
            port: 3306
          timeoutSeconds: 5
        name: mysql
        ports:
        - containerPort: 3306
          name: mysql
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: wordpress-setup
spec:
  clusterIP: None
  ports:
  - port: 3306
  selector:
    app: mysql
---
apiVersion: v1
data:
  wp-config.php: '<?php

    define(''DB_NAME'', ''wordpress'');

    define(''DB_USER'', ''root'');

    define(''DB_PASSWORD'', ''password'');

    define(''DB_HOST'', ''mysql'');

    define(''DB_CHARSET'', ''utf8'');

    define(''DB_COLLATE'', '''');

    '
kind: ConfigMap
metadata:
  name: wordpress-config
  namespace: wordpress-setup
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress-setup
spec:
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - env:
        - name: WORDPRESS_DB_HOST
          value: mysql
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-pass
        image: wordpress:latest
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          tcpSocket:
            port: 80
          timeoutSeconds: 5
        name: wordpress
        ports:
        - containerPort: 80
          name: wordpress
        readinessProbe:
          httpGet:
            path: /wp-admin/install.php
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/www/html/wp-config.php
          name: wordpress-config-volume
          subPath: wp-config.php
      volumes:
      - configMap:
          name: wordpress-config
        name: wordpress-config-volume
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress-setup
spec:
  ports:
  - port: 80
  selector:
    app: wordpress
  type: LoadBalancer
