1. Create a ConfigMap for WordPress configuration:

```yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-config
data:
  WORDPRESS_DB_HOST: "mysql"
  WORDPRESS_DB_USER: "wordpress"
  WORDPRESS_DB_PASSWORD: <wordpress_db_password>
  WORDPRESS_DB_NAME: "wordpress"
```

2. Create a Secret for MySQL password:

```yaml
apiVersion: v1
kind: Secret
metadata:
  name: mysql-password
data:
  MYSQL_ROOT_PASSWORD: <mysql_root_password>
```

3. Create PersistentVolume and PersistentVolumeClaim for MySQL data persistence:

```yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
  labels:
    type: local
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/mysql

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
```

4. Create a Deployment for MySQL:

```yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:latest
        envFrom:
          - secretRef:
              name: mysql-password
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
```

5. Create a Service for MySQL:

```yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
```

6. Create a Deployment for WordPress:

```yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - name: wordpress
        image: wordpress:latest
        envFrom:
          - configMapRef:
              name: wordpress-config
        ports:
        - containerPort: 80
```

7. Create a Service for WordPress:

```yaml
apiVersion: v1
kind: Service
metadata:
  name: wordpress-svc
spec:
  selector:
    app: wordpress
  ports:
    - protocol: TCP
      port: 80
```

With these YAML manifests, you can deploy a WordPress website with a MySQL database backend in Kubernetes. Remember to replace `<wordpress_db_password>` and `<mysql_root_password>` with the actual passwords you want to use.