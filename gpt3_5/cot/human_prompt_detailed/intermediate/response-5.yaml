1. Create a ConfigMap for WordPress configuration:
```yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-config
data:
  WORDPRESS_DB_HOST: mysql
  WORDPRESS_DB_USER: <mysql_username>
  WORDPRESS_DB_PASSWORD: <mysql_password>
  WORDPRESS_DB_NAME: wordpress
```

2. Create a Secret for MySQL password:
```yaml
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
data:
  password: <base64_encoded_password>
```

3. Create a PersistentVolumeClaim for MySQL data persistence:
```yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
```

4. Create a Deployment for MySQL:
```yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:latest
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: password
        ports:
          - containerPort: 3306
        volumeMounts:
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
```

5. Create a Service for MySQL:
```yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
```

6. Create a Deployment for WordPress:
```yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - name: wordpress
        image: wordpress:latest
        envFrom:
          - configMapRef:
              name: wordpress-config
        ports:
          - containerPort: 80
```

7. Create a Service for WordPress:
```yaml
apiVersion: v1
kind: Service
metadata:
  name: wordpress
spec:
  type: NodePort
  ports:
    - port: 80
  selector:
    app: wordpress
```

By following these steps and putting all these YAML snippets in one file, you can deploy a WordPress website with a MySQL backend on Kubernetes. Adjust any placeholders (e.g., <mysql_username>, <mysql_password>, <base64_encoded_password>) with the appropriate values before applying the manifest to your Kubernetes cluster.