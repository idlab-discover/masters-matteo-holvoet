{
  "provider": "openai",
  "errors": null,
  "status": "ProblemDetected",
  "problems": 3,
  "results": [
    {
      "kind": "Ingress",
      "name": "wordpress/wordpress",
      "error": [
        {
          "Text": "Ingress wordpress/wordpress does not specify an Ingress class.",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "wordpress",
              "Masked": "Vi8qRS5CPWww"
            },
            {
              "Unmasked": "wordpress",
              "Masked": "UTM+c29TVGxi"
            }
          ]
        }
      ],
      "details": "Error: The Ingress resource for wordpress/wordpress lacks a specified Ingress class, which defines the controller to handle it.\n\nSolution: \n1. Edit the Ingress manifest.\n2. Add `ingressClassName: <your-ingress-class>` under `spec`.\n3. Apply the updated manifest with `kubectl apply -f <file>`.",
      "parentObject": ""
    },
    {
      "kind": "Service",
      "name": "wordpress/wordpress",
      "error": [
        {
          "Text": "Service has not ready endpoints, pods: [Pod/wordpress-797c7dd457-vrk7r], expected 1",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The service has no ready endpoints because the pod 'wordpress-797c7dd457-vrk7r' is not ready, but 1 ready pod is expected.\n\nSolution: \n1. Check pod status with `kubectl get pods`.\n2. Inspect pod details with `kubectl describe pod wordpress-797c7dd457-vrk7r`.\n3. Resolve any issues (e.g., image pull, readiness probe).\n4. Ensure pod is running and ready.",
      "parentObject": ""
    },
    {
      "kind": "Pod",
      "name": "wordpress/wordpress-797c7dd457-vrk7r",
      "error": [
        {
          "Text": "Readiness probe failed: HTTP probe failed with statuscode: 500",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application returned a 500 status code, indicating an internal server error.\n\nSolution: \n1. Check application logs for errors.\n2. Ensure all dependencies are running.\n3. Verify configuration settings.\n4. Restart the application.",
      "parentObject": "Deployment/wordpress"
    }
  ]
}