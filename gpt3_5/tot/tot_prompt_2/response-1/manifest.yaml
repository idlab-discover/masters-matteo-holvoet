apiVersion: v1
kind: Pod
metadata:
  name: wordpress-mysql
spec:
  containers:
  - env:
    - name: MYSQL_ROOT_PASSWORD
      value: password123
    - name: MYSQL_DATABASE
      value: wordpress
    image: mysql:latest
    name: mysql
  - env:
    - name: WORDPRESS_DB_HOST
      value: localhost
    - name: WORDPRESS_DB_NAME
      value: wordpress
    - name: WORDPRESS_DB_PASSWORD
      value: password123
    image: wordpress:latest
    name: wordpress
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-mysql-service
spec:
  ports:
  - name: mysql
    port: 3306
    protocol: TCP
    targetPort: 3306
  - name: wordpress
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: wordpress-mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress-mysql
  template:
    metadata:
      labels:
        app: wordpress-mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: password123
        - name: MYSQL_DATABASE
          value: wordpress
        image: mysql:latest
        name: mysql
      - env:
        - name: WORDPRESS_DB_HOST
          value: mysql
        - name: WORDPRESS_DB_NAME
          value: wordpress
        - name: WORDPRESS_DB_PASSWORD
          value: password123
        image: wordpress:latest
        name: wordpress
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  ports:
  - name: mysql
    port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: wordpress-mysql
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-service
spec:
  ports:
  - name: wordpress
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: wordpress-mysql
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wordpress-ingress
spec:
  rules:
  - host: wordpress.example.com
    http:
      paths:
      - backend:
          serviceName: wordpress-service
          servicePort: 80
        path: /
