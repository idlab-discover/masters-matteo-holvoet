apiVersion: v1
data:
  DB_HOST: mysql
  DB_NAME: wordpress
kind: ConfigMap
metadata:
  name: wordpress-configmap
---
apiVersion: v1
data:
  DB_PASSWORD: <base64_encoded_value>
  DB_USER: <base64_encoded_value>
kind: Secret
metadata:
  name: mysql-secret
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  ports:
  - name: mysql
    port: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: mysql-secret
        image: mysql:5.7
        name: mysql
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-service
spec:
  ports:
  - name: wordpress
    port: 80
    targetPort: 80
  selector:
    app: wordpress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - env:
        - name: WORDPRESS_DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: wordpress-configmap
        - name: WORDPRESS_DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: wordpress-configmap
        image: wordpress:latest
        name: wordpress
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
          name: wordpress-persistent-storage
      volumes:
      - emptyDir: {}
        name: wordpress-persistent-storage
