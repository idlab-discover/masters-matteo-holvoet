apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: wordpressautoscalers.example.com
spec:
  group: example.com
  names:
    kind: WordPressAutoscaler
    listKind: WordPressAutoscalerList
    plural: wordpressautoscalers
    singular: wordpressautoscaler
  scope: Namespaced
  version: v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mysqlautoscalers.example.com
spec:
  group: example.com
  names:
    kind: MySQLAutoscaler
    listKind: MySQLAutoscalerList
    plural: mysqlautoscalers
    singular: mysqlautoscaler
  scope: Namespaced
  version: v1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-statefulset
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        image: mysql
        name: mysql
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-data
  volumeClaimTemplates:
  - metadata:
      name: mysql-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: service-mesh
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: service-mesh
---
apiVersion: v1
kind: Pod
metadata:
  name: monitoring-pod
spec:
  containers:
  - image: monitoring-image
    name: monitor-container
---
apiVersion: v1
data:
  key1: value1
  key2: value2
kind: ConfigMap
metadata:
  name: infrastructure-config
---
apiVersion: v1
kind: Deployment
metadata:
  name: disaster-recovery-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: disaster-recovery
  template:
    metadata:
      labels:
        app: disaster-recovery
    spec:
      containers:
      - image: recovery-image
        name: disaster-recovery-container
---
apiVersion: v1
kind: Pipeline
metadata:
  name: ci-cd-pipeline
spec:
  steps:
  - image: testing-image
    name: test-step
  - image: deployment-image
    name: deploy-step
---
apiVersion: v1
kind: Deployment
metadata:
  name: sidecar-proxy-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sidecar-proxy
  template:
    metadata:
      labels:
        app: sidecar-proxy
    spec:
      containers:
      - image: sidecar-proxy-image
        name: sidecar-proxy-container
      - image: main-container-image
        name: main-container
---
apiVersion: v1
kind: NetworkPolicy
metadata:
  name: network-policy
spec:
  podSelector:
    matchLabels:
      role: db
  policyTypes:
  - Ingress
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: restricted-psp
spec:
  allowPrivilegeEscalation: false
  privileged: false
  requiredDropCapabilities:
  - ALL
  volumes:
  - configMap
  - emptyDir
