5. Revised Prompt:
    "Design a Kubernetes YAML manifest for a multi-tiered application that simulates a real-world banking system. The application should consist of three main components:
        1. A frontend web application for customer interactions, named "bank-frontend".
        2. An API backend service for processing transactions, named "bank-api".
        3. A database service for storing customer information securely, named "bank-db".
    
    Your manifest should include:
        - Deployments for each component with appropriate container images, resource limits, and readiness probes.
        - Services for all components to allow communication within the application.
        - Implement network policies to restrict traffic between the frontend, API, and database services.
        - Utilize StatefulSets for the database service to ensure data persistence.
        
    Additionally, incorporate advanced security measures such as:
        - Implementing Role-Based Access Control (RBAC) to restrict access to sensitive data.
        - Using Network Policies to enforce strict communication rules between components.
        - Leveraging Secrets to securely store sensitive information such as API keys and passwords.
    
    Your solution should demonstrate a deep understanding of Kubernetes concepts, security best practices, and the complexities of managing a multi-tiered application in a production environment."