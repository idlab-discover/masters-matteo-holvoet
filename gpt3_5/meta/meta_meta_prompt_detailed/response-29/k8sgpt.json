{
  "provider": "openai",
  "errors": null,
  "status": "ProblemDetected",
  "problems": 6,
  "results": [
    {
      "kind": "Ingress",
      "name": "default/wordpress-ingress",
      "error": [
        {
          "Text": "Ingress default/wordpress-ingress does not specify an Ingress class.",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "default",
              "Masked": "dF8+ZmpWMw=="
            },
            {
              "Unmasked": "wordpress-ingress",
              "Masked": "dlt0bzE0SzJFQTxeYn1rZHM="
            }
          ]
        },
        {
          "Text": "Ingress uses the service default/wordpress which does not exist.",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "default",
              "Masked": "NWJKKURhTw=="
            },
            {
              "Unmasked": "wordpress",
              "Masked": "Q3V4QTUsX24j"
            }
          ]
        }
      ],
      "details": "Error: The Ingress 'wordpress-ingress' lacks an Ingress class and references a non-existent service 'default/wordpress'.\n\nSolution: \n1. Add an Ingress class to 'wordpress-ingress'.\n2. Verify 'default/wordpress' service exists.\n3. If missing, create the service or update Ingress to use an existing service.",
      "parentObject": ""
    },
    {
      "kind": "StatefulSet",
      "name": "default/mysql",
      "error": [
        {
          "Text": "StatefulSet uses the service default/mysql which does not exist.",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "default",
              "Masked": "VkVFKXwyQw=="
            },
            {
              "Unmasked": "mysql",
              "Masked": "OWdvaFY="
            }
          ]
        }
      ],
      "details": "Error: The StatefulSet is trying to use a service named \"default/mysql\" that doesn't exist.\n\nSolution: \n1. Verify the service name in the StatefulSet configuration.\n2. Create the missing service using `kubectl expose` or `kubectl apply`.\n3. Ensure the service is in the correct namespace.",
      "parentObject": ""
    },
    {
      "kind": "Service",
      "name": "monitoring/prometheus-grafana",
      "error": [
        {
          "Text": "Service has no endpoints, expected label app=prometheus-grafana",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "app",
              "Masked": "M2Vx"
            },
            {
              "Unmasked": "prometheus-grafana",
              "Masked": "emRTaCMxMF5vSkRocTsqVitr"
            }
          ]
        }
      ],
      "details": "Error: The service can't find any pods with the label `app=prometheus-grafana`.\n\nSolution: \n1. Check if pods are running: `kubectl get pods`.\n2. Verify pod labels: `kubectl get pods --show-labels`.\n3. If missing, label pods: `kubectl label pod <pod-name> app=prometheus-grafana`.\n4. Confirm service: `kubectl describe svc <service-name>`.",
      "parentObject": ""
    },
    {
      "kind": "Pod",
      "name": "default/wordpress-868fb8ff4b-96b8v",
      "error": [
        {
          "Text": "Readiness probe failed: HTTP probe failed with statuscode: 500",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application returned a 500 status code, indicating an internal server error.\n\nSolution: \n1. Check application logs for errors.\n2. Ensure all dependencies are running.\n3. Verify configuration settings.\n4. Restart the application.",
      "parentObject": "Deployment/wordpress"
    },
    {
      "kind": "Pod",
      "name": "default/wordpress-868fb8ff4b-59qkh",
      "error": [
        {
          "Text": "Readiness probe failed: HTTP probe failed with statuscode: 500",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The readiness probe failed because the application returned a 500 status code, indicating an internal server error.\n\nSolution: \n1. Check application logs for errors.\n2. Ensure all dependencies are running.\n3. Verify configuration settings.\n4. Restart the application.",
      "parentObject": "Deployment/wordpress"
    }
  ]
}