{
  "provider": "openai",
  "errors": null,
  "status": "ProblemDetected",
  "problems": 4,
  "results": [
    {
      "kind": "Pod",
      "name": "default/wordpress-deployment-59dfd5b954-hk2nl",
      "error": [
        {
          "Text": "0/3 nodes are available: persistentvolumeclaim \"wordpress-pvc\" not found. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The Kubernetes cluster cannot schedule the pod because the persistent volume claim \"wordpress-pvc\" is missing, and preemption isn't helping.\n\nSolution: \n1. Verify \"wordpress-pvc\" exists.\n2. If missing, create it with correct specs.\n3. Ensure it's bound to a persistent volume.\n4. Retry pod deployment.",
      "parentObject": "Deployment/wordpress-deployment"
    },
    {
      "kind": "Pod",
      "name": "default/mysql-deployment-79bff9fc69-2m8qf",
      "error": [
        {
          "Text": "couldn't find key MYSQL_USER in Secret default/mysql-secret",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The error indicates that the key `MYSQL_USER` is missing in the Kubernetes Secret named `mysql-secret` in the `default` namespace.\n\nSolution: \n1. Check the Secret with `kubectl get secret mysql-secret -o yaml`.\n2. Verify if `MYSQL_USER` is listed under `data`.\n3. If missing, add it using `kubectl edit secret mysql-secret` or recreate the Secret with the correct key-value pairs.",
      "parentObject": "Deployment/mysql-deployment"
    },
    {
      "kind": "Service",
      "name": "default/mysql-service",
      "error": [
        {
          "Text": "Service has not ready endpoints, pods: [Pod/mysql-deployment-79bff9fc69-2m8qf], expected 1",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The service has no ready endpoints because the specified pod is not ready.  \nSolution: 1. Check pod status with `kubectl get pods`. 2. Inspect pod details using `kubectl describe pod mysql-deployment-79bff9fc69-2m8qf`. 3. Resolve any issues (e.g., image pull errors, container crashes). 4. Verify readiness probe configuration.",
      "parentObject": ""
    },
    {
      "kind": "Service",
      "name": "default/wordpress-service",
      "error": [
        {
          "Text": "Service has no endpoints, expected label app=wordpress",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "app",
              "Masked": "OChH"
            },
            {
              "Unmasked": "wordpress",
              "Masked": "Umx1K0hRUW02"
            }
          ]
        }
      ],
      "details": "Error: The service can't find any pods because there are no endpoints with the label app=wordpress.\n\nSolution: \n1. Check if pods have the label app=wordpress.\n2. If not, add the label to the pods.\n3. Ensure the selector in the service matches the pod labels.\n4. Redeploy the service if needed.",
      "parentObject": ""
    }
  ]
}