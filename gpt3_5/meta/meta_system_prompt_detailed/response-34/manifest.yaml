apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  ports:
  - port: 3306
    protocol: TCP
  selector:
    app: mysql
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
data:
  mysql.cnf: '[mysqld]

    datadir=/var/lib/mysql

    socket=/var/run/mysqld/mysqld.sock

    '
kind: ConfigMap
metadata:
  name: mysql-config
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
stringData:
  mysql-password: <password>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - env:
        - env:
            name: MYSQL_DATABASE
            value: wordpress
          name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql-password
              name: mysql-secret
        - name: MYSQL_USER
          value: wordpress
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql-password
              name: mysql-secret
        image: mysql:latest
        name: mysql
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-service
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: wordpress
---
apiVersion: v1
data:
  wp-config.php: 'define(''DB_NAME'', ''wordpress'');

    define(''DB_USER'', ''wordpress'');

    define(''DB_PASSWORD'', ''<password>'');

    define(''DB_HOST'', ''mysql-service'');

    '
kind: ConfigMap
metadata:
  name: wordpress-config
---
apiVersion: v1
kind: Secret
metadata:
  name: wordpress-secret
stringData:
  mysql-password: <password>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - env:
        - name: WORDPRESS_DB_NAME
          value: wordpress
        - name: WORDPRESS_DB_USER
          value: wordpress
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql-password
              name: wordpress-secret
        image: wordpress:latest
        name: wordpress
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html/wp-content
          name: wordpress-persistent-storage
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wordpress-pvc
